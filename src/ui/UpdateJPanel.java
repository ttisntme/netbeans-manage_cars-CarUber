/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarFleet;

/**
 *
 * @author TT
 */
public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ChangeJPanel
     */
    CarFleet carFleet;
    public UpdateJPanel(CarFleet carFleet) {
        initComponents();
        
        this.carFleet = carFleet;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarFleet = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblMadeCompany = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtMadeCompany = new javax.swing.JTextField();
        lblMaintenanceState = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        txtMaintenanceState = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        lblSeat = new javax.swing.JLabel();
        txtSeat = new javax.swing.JTextField();
        lblAvailTime = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        txtAvailTime = new javax.swing.JTextField();
        lblModelNumber = new javax.swing.JLabel();
        lblAvailFlag = new javax.swing.JLabel();
        txtModelNumber = new javax.swing.JTextField();
        txtAvailFlag = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        cbAvailable = new javax.swing.JCheckBox();
        cbMaintenance = new javax.swing.JCheckBox();

        tblCarFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                " Car Serial Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarFleet);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblMadeCompany.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMadeCompany.setText("Made Company:");

        lblMaintenanceState.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaintenanceState.setText("Maintenance State:");

        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYear.setText("Year:");

        lblSeat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSeat.setText("Seat:");

        lblAvailTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAvailTime.setText("Available Time:");

        lblSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSerialNumber.setText("Serial Number:");

        lblModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblModelNumber.setText("Model Number:");

        lblAvailFlag.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAvailFlag.setText("Available:");

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City:");

        btnDelete.setBackground(new java.awt.Color(255, 105, 180));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cbAvailable.setFont(new java.awt.Font("Lucida Fax", 0, 12)); // NOI18N
        cbAvailable.setText("check if available");

        cbMaintenance.setFont(new java.awt.Font("Lucida Fax", 0, 12)); // NOI18N
        cbMaintenance.setText("check if MC is valid");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCity)
                                .addGap(18, 18, 18)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblModelNumber)
                                .addGap(18, 18, 18)
                                .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSeat)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblYear)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMadeCompany)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMadeCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAvailFlag)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAvailFlag, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAvailTime)
                                            .addComponent(lblSerialNumber))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAvailTime, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMaintenanceState)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaintenanceState, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMaintenance)
                            .addComponent(cbAvailable)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAvailFlag, lblAvailTime, lblCity, lblMadeCompany, lblMaintenanceState, lblModelNumber, lblSeat, lblSerialNumber, lblYear});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSerialNumber)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAvailTime)
                            .addComponent(txtAvailTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAvailFlag)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtAvailFlag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbAvailable)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMadeCompany)
                            .addComponent(txtMadeCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblYear)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSeat)
                            .addComponent(txtSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblModelNumber)
                            .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMaintenanceState)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaintenanceState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbMaintenance))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please selece a row to view and update.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCarFleet.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0); 
        
        if(selectedCar.getAvailFlag()==1){
            txtAvailFlag.setText("Yes");
        }else txtAvailFlag.setText("No");
        if(selectedCar.getAvailTime()/100 == 0){
            txtAvailTime.setText("0"+String.valueOf(selectedCar.getAvailTime()));
        }else txtAvailTime.setText(String.valueOf(selectedCar.getAvailTime()));
        if(selectedCar.getMaintenanceState()==1){
            txtMaintenanceState.setText("Valid");
        }else txtMaintenanceState.setText("Expired");
        txtModelNumber.setText(selectedCar.getModelNumber());
        if(selectedCar.getSeat()==0){
            txtSeat.setText("");
        }else txtSeat.setText(String.valueOf(selectedCar.getSeat()));
        if(selectedCar.getYear()==0){
            txtYear.setText("");
        }else txtYear.setText(String.valueOf(selectedCar.getYear()));
        
        txtCity.setText(selectedCar.getCity());
        txtMadeCompany.setText(selectedCar.getMadeCompany());
        txtSerialNumber.setText(selectedCar.getSerialNumber());
        
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please selece a row to update.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCarFleet.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0); 
        
        int time = 0;
        int timeFlag = 0;
        if(Pattern.compile("^\\d{4}$").matcher(txtAvailTime.getText()).matches() || Pattern.compile("^\\d{3}$").matcher(txtAvailTime.getText()).matches()){
            time = Integer.parseInt(txtAvailTime.getText());
            timeFlag = 1;
        }else timeFlag = 0;

        int avail;
        if(cbAvailable.isSelected()){
            avail = 1;
        }else avail = 0;
        
        String madeCompany = txtMadeCompany.getText();
        
        int year;
        if(Pattern.compile("^\\d{4}$").matcher(txtYear.getText()).matches()){
            year = Integer.parseInt(txtYear.getText());
        }else year = 0;
        
        int seat;
        if(Pattern.compile("^\\d{1,}$").matcher(txtSeat.getText()).matches()){
            seat = Integer.parseInt(txtSeat.getText());
        }else seat = 0;
        
        String serialNumber = null;
        int serialFlag = 1;
        if(Pattern.compile("^\\d{6}$").matcher(txtSerialNumber.getText()).matches()){
            if(selectedCar.getSerialNumber().equals(txtSerialNumber.getText())){   // update without changing the serial number
                    serialNumber = txtSerialNumber.getText();
            }else{
                for(Car testCar:carFleet.getCarList()){
                    if(testCar.getSerialNumber().equals(txtSerialNumber.getText())) serialFlag=0; // Serial Number must be unique
                }
                if(serialFlag==1) serialNumber = txtSerialNumber.getText();
            }
        }else serialFlag = 0;
        
        String modelNumber = txtModelNumber.getText();
        String city = txtCity.getText();
        int maintenanceState;
        if(cbMaintenance.isSelected()){
            maintenanceState = 1;
        }else maintenanceState = 0;
        
        if(serialFlag==1 && timeFlag==1){
            Car car = selectedCar;
            car.setAvailTime(time);
            car.setAvailFlag(avail);
            car.setMadeCompany(madeCompany);
            car.setYear(year);
            car.setSeat(seat);
            car.setSerialNumber(serialNumber);
            car.setModelNumber(modelNumber);
            car.setCity(city);
            car.setMaintenanceState(maintenanceState);
            JOptionPane.showMessageDialog(this, "Car Updated.");
            
            populateTable();
            
            txtAvailFlag.setText("");  // clear
            txtAvailTime.setText("");
            txtCity.setText("");
            txtMadeCompany.setText("");
            txtMaintenanceState.setText("");
            txtModelNumber.setText("");
            txtSeat.setText("");
            txtSerialNumber.setText("");
            txtYear.setText("");

            Date date = new Date();
            carFleet.setUpdateTime(date);    // update time
            
        }else JOptionPane.showMessageDialog(this, "ERROR: you need to input valid Serial Number and AvailTime!");
        
        
        
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please selece a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCarFleet.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0); 
        
        carFleet.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(this, "Car deleted.");
        
        populateTable();
        txtAvailFlag.setText("");  // clear
        txtAvailTime.setText("");
        txtCity.setText("");
        txtMadeCompany.setText("");
        txtMaintenanceState.setText("");
        txtModelNumber.setText("");
        txtSeat.setText("");
        txtSerialNumber.setText("");
        txtYear.setText("");
        
        Date date = new Date();
        carFleet.setUpdateTime(date);   // update time
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JCheckBox cbAvailable;
    private javax.swing.JCheckBox cbMaintenance;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailFlag;
    private javax.swing.JLabel lblAvailTime;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblMadeCompany;
    private javax.swing.JLabel lblMaintenanceState;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblSeat;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTable tblCarFleet;
    private javax.swing.JTextField txtAvailFlag;
    private javax.swing.JTextField txtAvailTime;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMadeCompany;
    private javax.swing.JTextField txtMaintenanceState;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtSeat;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarFleet.getModel();
        model.setRowCount(0);
        
        for(Car che: carFleet.getCarList()){
            Object[] row = new Object[1];
            row[0] = che;  // when show the name string of vs, override the method to show serial number

            model.addRow(row);
        }
        
        
        
    }
}
